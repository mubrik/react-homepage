{"version":3,"sources":["components/NavButton.tsx","components/DarkModeSwitch.tsx","components/CustomComponents.tsx","components/ProjectCard.tsx","components/ProjectListView.tsx","components/ProfileView.tsx","components/NowPlaying.tsx","components/HomePage.tsx","components/utils/contextUtil.ts","App.tsx","reportWebVitals.js","index.js"],"names":["StyledDiv","styled","theme","position","border","palette","type","secondary","main","primary","borderRadius","NavButton","setNav","darkMode","useDarkMode","React","anchorEl","setAnchorEl","menuShow","Boolean","handleMenuItemClick","str","IconButton","color","onClick","e","currentTarget","MenuOutlined","Menu","open","onClose","id","TransitionComponent","Fade","MenuItem","DarkModeSwitch","setDarkMode","state","EmojiObjectsOutlined","fontSize","CustomType","children","rest","Typography","sx","CustomBaseButton","href","variant","_href","Button","event","preventDefault","window","handleLink","StyledCardAreaDiv","display","gridTemplateRows","padding","spacing","justifyItems","breakpoints","up","gridTemplateColumns","StyledCardTextAreaDiv","margin","flexDirection","textAlign","StyledCardButtonAreaDiv","justifyContent","StyledImg","maxHeight","minWidth","maxWidth","ProjectCard","imageUri","content","siteLink","codeLink","Paper","elevation","width","alt","src","Skeleton","height","animation","StyledProfileCardDiv","light","boxShadow","ProjectListView","show","useState","expanded","setExpanded","projData","setProjData","transitions","useTransition","from","transform","enter","delay","leave","expires","useEffect","fetch","then","res","json","result","details","handleClick","styles","div","style","size","alignSelf","marginBottom","startIcon","map","item","index","Accordion","onChange","_","isExpanded","panel","handleChange","AccordionSummary","expandIcon","Avatar","marginRight","header","slice","marginLeft","description","AccordionDetails","StyledAboutDiv","alignItems","StyledParagraphDiv","StyledBtnSectionDiv","StyledProfileAviDiv","ProfileView","param","bgColor","url","title","network","StyledResponsiveGrid","overflow","gap","prepareData","newData","_stateData","artist","image","date","timeMs","name","uts","Date","NowPlaying","pageState","nowPlaying","setNowPlaying","recentPlays","setRecentPlays","dataState","setDataState","fetchMyTracks","a","response","reqObj","_nowPlaying","_recentPlays","track","console","log","handleRefreshClick","Stack","direction","LoadingButton","loading","Card","raised","Box","paddingTop","component","CardMedia","CardContent","flex","xs","sm","md","StyledRootDiv","minHeight","StyledNavAreaDiv","StyledBackgroundDiv","background","default","Homepage","setPageState","createContext","ctx","undefined","c","Error","Provider","DarkModeProvider","App","prefersDarkMode","useMediaQuery","darkModeValue","createTheme","mode","dark","warning","typography","fontFamily","join","values","lg","xl","responsiveTheme","responsiveFontSizes","factor","ThemeProvider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.9399e27f.chunk.js","sourcesContent":["import * as React from 'react';\r\n// material\r\nimport { styled } from '@mui/system';\r\nimport { Menu, MenuItem, Fade, IconButton } from '@mui/material';\r\nimport { MenuOutlined } from '@mui/icons-material';\r\n// drkmode\r\nimport { useDarkMode } from '../App';\r\n// types\r\nimport {IHomePageState} from \"./HomePage\";\r\n\r\n// styled\r\nconst StyledDiv = styled(\"div\")(({theme}) => ({\r\n  position: \"relative\",\r\n  border: `1px solid ${theme.palette.type == \"dark\" ? theme.palette.secondary.main : theme.palette.primary.main}`,\r\n  borderRadius: \"15px\"\r\n}));\r\n\r\ninterface INavProps {\r\n  setNav: React.Dispatch<React.SetStateAction<IHomePageState>>;\r\n}\r\n\r\nconst NavButton = ({setNav}:INavProps): JSX.Element => {\r\n  // darkmode\r\n  const {darkMode} = useDarkMode();\r\n  // states\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement|null>(null);\r\n  const menuShow = Boolean(anchorEl);\r\n\r\n  // handle click, mount element\r\n  const handleMenuClick = (_event: React.MouseEvent<HTMLButtonElement>): void => {\r\n    setAnchorEl(_event.currentTarget);\r\n  };\r\n  // handle menu close\r\n  const handleMenuItemClick = (str: string): void => {\r\n    switch (str) {\r\n      case \"projects\":\r\n        setNav(\"projects\");\r\n        setAnchorEl(null);\r\n        break;\r\n      \r\n      case \"home\":\r\n        setNav(\"home\");\r\n        setAnchorEl(null);\r\n        break;\r\n      \r\n      case \"nowPlaying\":\r\n        setNav(\"nowPlaying\");\r\n        setAnchorEl(null);\r\n        break;\r\n  \r\n      default:\r\n        setAnchorEl(null);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledDiv>\r\n    <IconButton \r\n      aria-controls=\"fade-menu\"\r\n      aria-haspopup=\"true\" \r\n      color={darkMode ? \"secondary\" : \"primary\"}\r\n      onClick={(e) => handleMenuClick(e)}\r\n    >\r\n      <MenuOutlined/>\r\n    </IconButton>\r\n    <Menu\r\n      open={menuShow}\r\n      anchorEl={anchorEl}\r\n      onClose={handleMenuItemClick}\r\n      id=\"faded-menu\"\r\n      TransitionComponent={Fade}\r\n    >\r\n      <MenuItem onClick={() => handleMenuItemClick(\"home\")}> Home </MenuItem>\r\n      <MenuItem onClick={() => handleMenuItemClick(\"projects\")}> Projects </MenuItem>\r\n      <MenuItem onClick={() => handleMenuItemClick(\"nowPlaying\")}> Now Playing </MenuItem>\r\n    </Menu>\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\n\r\n// const CustomFade = React.forwardRef((props, ref) => (<Fade {...props} ref={ref} />));\r\n// CustomFade.displayName = \"CustomFade\";\r\n\r\n// const CustomMenu = React.forwardRef((props, ref) => (<Menu {...props} ref={ref}/>));\r\n// CustomMenu.displayName = \"CustomMenu\";\r\n\r\n// const CustomMenuItem = React.forwardRef((props, ref) => (<MenuItem {...props} ref={ref}/>));\r\n// CustomMenuItem.displayName = \"CustomMenuItem\";\r\n\r\nexport default NavButton;","import * as React from 'react';\r\n// material\r\nimport { styled } from '@mui/system';\r\nimport { IconButton } from '@mui/material';\r\n// dk mode context\r\nimport {useDarkMode} from \"../App\";\r\n// icons\r\nimport { EmojiObjectsOutlined } from '@mui/icons-material';\r\n\r\nconst StyledDiv = styled(\"div\")(() => ({\r\n  position: \"relative\",\r\n}));\r\n\r\nconst DarkModeSwitch = (): JSX.Element => {\r\n  // darkmode\r\n  const {darkMode, setDarkMode} = useDarkMode();\r\n\r\n  return(\r\n    <StyledDiv>\r\n      <IconButton\r\n        color={darkMode ? \"secondary\" : \"primary\"}\r\n        onClick={() => setDarkMode(state => !state)}\r\n      >\r\n        <EmojiObjectsOutlined fontSize={\"large\"}/>\r\n      </IconButton>\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default DarkModeSwitch;","import * as React from 'react';\r\n// ui\r\nimport { Button, Typography, ButtonProps, TypographyProps } from '@mui/material';\r\n// comps\r\nimport {useDarkMode} from \"../App\";\r\n\r\nconst CustomType = ({children, ...rest}: TypographyProps): JSX.Element=> {\r\n  // darkmode\r\n  const {darkMode} = useDarkMode();\r\n\r\n  return (\r\n    <Typography\r\n      sx={{color: darkMode ? \"text.primary\" : \"text.secondary\"}}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst CustomBaseButton = ({children, href, variant, onClick,  ...rest}: ButtonProps):JSX.Element => {\r\n  // href may or may not be passed in\r\n  const _href = href ? href : \"\";\r\n\r\n  // darkmode\r\n  const {darkMode} = useDarkMode();\r\n  // handle click, cant use \"target\" for TS?, need links to open in new tab\r\n  const handleLink = (href: string, event?:React.MouseEvent<HTMLButtonElement>): void => {\r\n    // prev default\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    // manually open\r\n    window.open(href, \"_blank\");\r\n  };\r\n\r\n  return(\r\n    <Button \r\n      color={darkMode ? \"secondary\" : \"primary\"}\r\n      variant={variant ? variant : \"outlined\"}\r\n      onClick={onClick ? onClick : (e) => handleLink(_href, e)}\r\n      href={href ? href : \"\"}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport {CustomType, CustomBaseButton};","import * as React from 'react';\r\n// material\r\nimport { styled } from '@mui/system';\r\nimport { Paper, Skeleton } from '@mui/material';\r\nimport {CustomBaseButton} from './CustomComponents';\r\n// custom type\r\nimport { CustomType } from './CustomComponents';\r\n\r\nconst StyledCardAreaDiv = styled(\"div\")(({theme}) => ({\r\n  display: \"grid\",\r\n  gridTemplateRows: \"auto\",\r\n  padding: theme.spacing(0.4),\r\n  justifyItems: \"center\",\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    gridTemplateColumns: \"auto auto\",\r\n  },\r\n}));\r\n\r\nconst StyledCardTextAreaDiv = styled(\"div\")(({theme}) => ({\r\n  padding: theme.spacing(0.4),\r\n  margin: theme.spacing(0.2),\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  textAlign: \"center\"\r\n}));\r\n\r\nconst StyledCardButtonAreaDiv = styled(\"div\")(({theme}) => ({\r\n  padding: theme.spacing(0.4),\r\n  margin: theme.spacing(0.4),\r\n  display: \"flex\",\r\n  justifyContent: \"space-evenly\"\r\n}));\r\n\r\nconst StyledImg = styled(\"img\")(({theme}) => ({\r\n  maxHeight: 320,\r\n  minWidth: 120,\r\n  maxWidth: 200,\r\n  [theme.breakpoints.up(\"xs\")]: {\r\n    maxHeight: 320,\r\n    maxWidth: 400,\r\n    minWidth: 200,\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    maxHeight: 320,\r\n    maxWidth: 400,\r\n    minWidth: 320,\r\n  },\r\n}));\r\n\r\ninterface IJsonObj {\r\n  header: string;\r\n  content: string;\r\n  description: string;\r\n  codeLink: string;\r\n  imageUri: string;\r\n  siteLink?: string;\r\n}\r\n\r\nconst ProjectCard = ({imageUri, content, siteLink, codeLink}: IJsonObj): JSX.Element => {\r\n\r\n  return(\r\n    <Paper \r\n      elevation={0}\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\"\r\n      }}\r\n    >\r\n      <StyledCardAreaDiv>\r\n        {imageUri ? (\r\n            <StyledImg\r\n              alt={\"placeholder\"}\r\n              src={imageUri}\r\n            />\r\n            ) : (\r\n              <Skeleton width={60} height={30} animation=\"wave\"/>\r\n            )\r\n        }\r\n          \r\n        <StyledCardTextAreaDiv>\r\n          <div>\r\n            <CustomType variant=\"body2\">\r\n              {content ? content : \"\"}\r\n            </CustomType>\r\n          </div>\r\n          <StyledCardButtonAreaDiv>\r\n            {siteLink && <CustomBaseButton href={siteLink}>Check It Out</CustomBaseButton>}\r\n            <CustomBaseButton href={codeLink} >Git Code</CustomBaseButton>\r\n          </StyledCardButtonAreaDiv>\r\n        </StyledCardTextAreaDiv>\r\n      </StyledCardAreaDiv>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;","import React from 'react';\r\n// material\r\nimport { styled } from '@mui/system';\r\nimport { Accordion, AccordionDetails, AccordionSummary  } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\n// icons\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n// anim spring\r\nimport { animated, useTransition } from 'react-spring';\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { CustomBaseButton, CustomType} from './CustomComponents';\r\n//types\r\nimport {IHomePageState} from \"./HomePage\";\r\n\r\nconst StyledProfileCardDiv = styled(\"div\")(({theme}) => ({\r\n  position: \"relative\",\r\n  flexDirection: \"column\",\r\n  height: \"auto\",\r\n  padding: theme.spacing(2),\r\n  border: theme.palette.type === \"dark\" ? `1px solid ${theme.palette.primary.light}21` : \"none\",\r\n  boxShadow: theme.palette.type === \"dark\"? \"none\" : `7px 10px 14px 1px #0000000d,\r\n  1px 3px 10px 1px #00000021`,\r\n  borderRadius: \"0.9em\",\r\n  minWidth:\"100%\", // mobile\r\n  [theme.breakpoints.up(\"xs\")]: {\r\n      minWidth:\"50vw\"\r\n  },\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n      minWidth:\"55vw\"\r\n  },\r\n  [theme.breakpoints.up(\"xl\")]: {\r\n      minWidth:\"58vw\"\r\n  },\r\n}));\r\n\r\ninterface IProjectListView {\r\n  setNav: React.Dispatch<React.SetStateAction<IHomePageState>>;\r\n  show: boolean;\r\n}\r\n\r\ninterface IJsonObj {\r\n  header: string;\r\n  content: string;\r\n  description: string;\r\n  codeLink: string;\r\n  imageUri: string;\r\n  siteLink?: string;\r\n}\r\n\r\nconst ProjectListView = ({setNav, show}: IProjectListView): JSX.Element => {\r\n\r\n    // states\r\n    // handle accordions\r\n    const [expanded, setExpanded] = React.useState<boolean|string>(false);\r\n    // project data\r\n    const [projData, setProjData] = React.useState<IJsonObj[]|null>(null);\r\n    // anim transitions props\r\n    const transitions = useTransition(show, {\r\n      from: {\r\n        display: \"none\",\r\n        transform: \"translateX(80%)\",\r\n      },\r\n      enter: {\r\n        delay: 600,\r\n        display: \"flex\",\r\n        transform: \"translateX(0%)\",\r\n      },\r\n      leave: {\r\n        transform: \"translateX(-250%)\",\r\n      },\r\n      expires: 2\r\n    });\r\n    // fetch project details\r\n    React.useEffect(() => {\r\n      fetch('/react-homepage/projectDetails.json')\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          const {details} = result;\r\n          setProjData(details as IJsonObj[]);\r\n        });\r\n    }, []);\r\n    // handle button clicks\r\n    const handleClick = (): void => {\r\n      setNav(\"home\");\r\n    };\r\n\r\n    const handleChange = (panel: string, isExpanded: boolean): void => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    return transitions(\r\n      (styles, show) => show && \r\n        <animated.div style={styles}>\r\n          <StyledProfileCardDiv>\r\n            <CustomBaseButton\r\n              size={\"small\"}\r\n              onClick={handleClick}\r\n              sx={{\r\n                alignSelf: \"self-start\",\r\n                margin: (theme) =>  theme.spacing(1),\r\n                marginBottom: (theme) => theme.spacing(2)\r\n              }}\r\n              startIcon={<ArrowBackIcon/>}\r\n            >\r\n              Home\r\n            </CustomBaseButton>\r\n            { projData ? \r\n                projData.map((item, index) => (\r\n                  <Accordion\r\n                    key={`panel${index}`}\r\n                    sx={{margin:(theme) => theme.spacing(1)}}\r\n                    expanded={expanded === `panel${index}`} \r\n                    onChange={(_, isExpanded) => handleChange(`panel${index}`, isExpanded)}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1a-content\"\r\n                      id=\"panel1a-header\"\r\n                    >\r\n                      <Avatar aria-label=\"title\"  \r\n                        variant=\"rounded\"\r\n                        sx={{\r\n                        height: \"auto\",\r\n                        marginRight:(theme) => theme.spacing(1)}}\r\n                      >\r\n                        {item.header.slice(0, 1)}\r\n                      </Avatar>\r\n                      <CustomType>{item.header}</CustomType>\r\n                      <CustomType sx={{marginLeft: \"auto\", marginRight: \"auto\"}}>{item.description}</CustomType>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <ProjectCard {...item}/>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                )) :\r\n                null\r\n            }\r\n          </StyledProfileCardDiv>\r\n        </animated.div>\r\n    );\r\n};\r\n\r\nexport default ProjectListView;","import * as React from 'react';\r\n// material\r\nimport { styled } from '@mui/system';\r\nimport { Avatar } from '@mui/material';\r\n// animation\r\nimport { animated, useTransition } from 'react-spring';\r\n// social icons\r\nimport { SocialIcon } from 'react-social-icons';\r\n// custom\r\nimport {CustomType, CustomBaseButton} from './CustomComponents';\r\n// dkmode\r\nimport { useDarkMode } from '../App';\r\n//types\r\nimport {IHomePageState} from \"./HomePage\";\r\n\r\nconst StyledAboutDiv = styled(\"div\")(({theme}) => ({\r\n  margin: theme.spacing(0.5),\r\n  marginBottom: theme.spacing(2),\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  textAlign: \"center\"\r\n}));\r\n\r\nconst StyledParagraphDiv = styled(\"div\")(({theme}) => ({\r\n  margin: theme.spacing(0.1),\r\n  marginBottom: theme.spacing(1.5),\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  textAlign: \"center\"\r\n}));\r\n\r\nconst StyledBtnSectionDiv = styled(\"div\")(({theme}) => ({\r\n  margin: theme.spacing(3),\r\n  display: \"flex\",\r\n  justifyContent: \"space-evenly\",\r\n}));\r\n\r\nconst StyledProfileAviDiv = styled(\"div\")(({theme}) => ({\r\n  margin: theme.spacing(0.5),\r\n  marginBottom: theme.spacing(3),\r\n  display: \"flex\",\r\n  justifyContent: \"space-evenly\",\r\n}));\r\n\r\nconst StyledProfileCardDiv = styled(\"div\")(({theme}) => ({\r\n  position: \"relative\",\r\n  flexDirection: \"column\",\r\n  height: \"auto\",\r\n  padding: theme.spacing(2),\r\n  border: theme.palette.type === \"dark\" ? `1px solid ${theme.palette.primary.light}21` : \"none\",\r\n  boxShadow: theme.palette.type === \"dark\"? \"none\" : `7px 10px 14px 1px #0000000d,\r\n  1px 3px 10px 1px #00000021`,\r\n  borderRadius: \"0.9em\",\r\n  minWidth:\"100%\", // mobile\r\n  [theme.breakpoints.up(\"xs\")]: {\r\n      minWidth:\"50vw\"\r\n  },\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n      minWidth:\"55vw\"\r\n  },\r\n  [theme.breakpoints.up(\"xl\")]: {\r\n      minWidth:\"58vw\"\r\n  },\r\n}));\r\n\r\ninterface IProfileViewProps {\r\n  setNav: React.Dispatch<React.SetStateAction<IHomePageState>>;\r\n  show: boolean;\r\n}\r\n\r\nconst ProfileView = ({setNav, show}: IProfileViewProps): JSX.Element => {\r\n  // material styles\r\n  // const theme = useTheme();\r\n\r\n  // anim transitions props\r\n  const transitions = useTransition(show, {\r\n      from: {\r\n          display: \"none\",\r\n          transform: \"scale(0.2)\",\r\n      },\r\n      enter: {\r\n          delay: 500,\r\n          display: \"flex\",\r\n          transform: \"scale(1)\",\r\n      },\r\n      leave: {\r\n          transform: \"scale(0)\",\r\n      },\r\n      expires: 2\r\n  });\r\n  // darkmode\r\n  const {darkMode} = useDarkMode();\r\n  // handle button clicks\r\n  const handleClick = (param: IHomePageState): void => {\r\n    setNav(param);\r\n  };\r\n\r\n  return transitions(\r\n    (styles, show) => show &&\r\n    <animated.div style={styles}>\r\n    <StyledProfileCardDiv>\r\n      <StyledProfileAviDiv>\r\n        <Avatar \r\n          src={darkMode ? \"/react-homepage/avi2.png\" : \"/react-homepage/avi.png\"} \r\n          alt=\"test\"\r\n          sx={{ width: 80, height: 80 }}\r\n        />\r\n      </StyledProfileAviDiv>\r\n      <StyledAboutDiv>\r\n        <CustomType>My name is Mubarak Yahaya, A developer based in Nigeria. </CustomType>\r\n        <CustomType>I love good music, coffee and tweaking stuff :) </CustomType>\r\n        <CustomType>My current development stack includes Python, javaScript( typeScript ) and Linux </CustomType>\r\n      </StyledAboutDiv>\r\n      <StyledParagraphDiv>\r\n        <CustomType>Check out some of my</CustomType>\r\n        <CustomBaseButton\r\n          variant={\"contained\"}\r\n          sx={{marginLeft:(theme) => theme.spacing(1)}}\r\n          onClick={() => handleClick(\"projects\")}\r\n        >\r\n          Projects\r\n        </CustomBaseButton>\r\n      </StyledParagraphDiv>\r\n      <StyledParagraphDiv>\r\n        <CustomType>What am i </CustomType>\r\n        <CustomBaseButton\r\n          variant={\"contained\"}\r\n          sx={{marginLeft:(theme) => theme.spacing(1), marginRight:(theme) => theme.spacing(1)}}\r\n          onClick={() => handleClick(\"nowPlaying\")}\r\n        >\r\n          Listening\r\n        </CustomBaseButton>\r\n        <CustomType>to?</CustomType>\r\n      </StyledParagraphDiv>\r\n      <StyledBtnSectionDiv>\r\n        <SocialIcon \r\n          bgColor={darkMode ? \"#c95100\" : \"black\"} \r\n          url={\"https://github.com/mubrik\"}\r\n          title={\"Github\"}\r\n        />\r\n        <SocialIcon \r\n          bgColor={darkMode ? \"#c95100\" : \"black\"} \r\n          url={\"mailto:mubarakg4u@gmail.com\"}\r\n          network={\"email\"}\r\n          title={\"Email\"}\r\n        />\r\n        <SocialIcon \r\n          url={\"https://t.me/mubrik1\"}\r\n          network={\"telegram\"}\r\n          title={\"Telegram\"}\r\n        />\r\n        <SocialIcon\r\n          url={\"https://www.linkedin.com/in/mubarak-yahaya-957917163\"}\r\n          title={\"LinkedIn\"}\r\n        />\r\n      </StyledBtnSectionDiv>\r\n      </StyledProfileCardDiv>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default ProfileView;","import * as React from \"react\";\n// material\nimport { styled } from \"@mui/system\";\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { Stack } from \"@mui/material\";\n// icon\nimport LoadingButton from '@mui/lab/LoadingButton';\n// transitions\nimport { animated, useTransition } from 'react-spring';\n// types\nimport {IHomePageState} from \"./HomePage\";\n// drkmode\nimport { useDarkMode } from \"../App\";\n// custom\nimport { CustomType } from \"./CustomComponents\";\n\nconst StyledProfileCardDiv = styled(\"div\")(({theme}) => ({\n  position: \"relative\",\n  flexDirection: \"column\",\n  height: \"auto\",\n  maxHeight: \"80vh\",\n  padding: theme.spacing(1.2),\n  border: theme.palette.type === \"dark\" ? `1px solid ${theme.palette.primary.light}21` : \"none\",\n  borderRadius: \"0.9em\",\n  minWidth:\"100%\", // mobile\n  [theme.breakpoints.up(\"xs\")]: {\n    minWidth:\"50vw\"\n  },\n  [theme.breakpoints.up(\"sm\")]: {\n    minWidth:\"55vw\"\n  },\n  [theme.breakpoints.up(\"lg\")]: {\n    minWidth:\"58vw\"\n  },\n}));\n\nconst StyledResponsiveGrid = styled(\"div\")(({theme}) => ({\n  display: \"grid\",\n  gridTemplateRows: \" auto\",\n  overflow: \"auto\",\n  padding: theme.spacing(1),\n  [theme.breakpoints.up(\"sm\")]: {\n    gridTemplateColumns: \"1fr 0.8fr\",\n    overflow: \"hidden\",\n    gap: \"10px\",\n    padding: theme.spacing(0.5),\n  },\n}));\n\ntype IDataState = \"idle\"| \"loaded\" | \"loading\"\n\ninterface INowPlayingProps {\n  pageState: IHomePageState;\n  setNav: React.Dispatch<React.SetStateAction<IHomePageState>>;\n  show: boolean;\n}\n\ninterface ITrackObj {\n  artist: {mbid: string; \"#text\": string;};\n  date: {uts: string; \"#text\": string;}\n  image: ITrackImageObj[]\n  name: string;\n  url: string;\n}\n\ninterface ITrackImageObj {\n  size: string;\n  \"#text\": string;\n}\n\ninterface ISongDetail {\n  artist: string;\n  title: string;\n  image: string;\n  date: string;\n  timeMs: string;\n}\n\n// making this as for some reason react spring kept bugging while using \"#text\" from lastfm\nconst prepareData = (param: ITrackObj, type?: string):ISongDetail => {\n\n  // copy\n  const newData = {...param};\n  // initial data\n  const _stateData: ISongDetail = {\n    artist: \"\",\n    title: \"\",\n    image: \"\",\n    date: \"\",\n    timeMs: \"\"\n  };\n\n  // mutate.. apparently bug might be from last fm? \n  // ah, i'm dumb, i use last fm apis and forgot date isnt available until the track is scrobbled. smfh, facepalm\n  // for now playing track, the details are available but date isnt, which could cause the object key being absent\n  // already made the function, so amma just leave it here\n  _stateData.artist = newData?.artist?.[\"#text\"] ? newData.artist[\"#text\"] : \"placeholder\";\n  _stateData.date = newData?.date?.[\"#text\"] ? newData.date[\"#text\"] : \"\";\n  _stateData.timeMs = newData?.date?.[\"uts\"] ? newData.date[\"uts\"] : \"placeholder\";\n  _stateData.title = newData?.name ? newData.name  : \"placeholder\";\n  // array index 2 has large sinze image link\n  _stateData.image = newData?.image[2][\"#text\"] ? newData.image[2][\"#text\"] : \"\";\n  if (type === \"nowPlaying\") {\n    // could be recent track, get time if available\n    const _playtime = newData?.date?.uts ? newData.date.uts : null;\n\n    if (_playtime) {\n      // work on later\n      const currTime = new Date();\n    }\n\n  }\n  // return data\n  return _stateData;\n};\n\nconst NowPlaying = ({pageState, show}: INowPlayingProps): JSX.Element => {\n\n  // states\n  const [nowPlaying, setNowPlaying] = React.useState<ISongDetail|null>(null);\n  const [recentPlays, setRecentPlays] = React.useState<ISongDetail[]|null>(null);\n  const [dataState, setDataState] = React.useState<IDataState|null>(\"idle\");\n\n  // darkmode \n  const {darkMode} = useDarkMode();\n\n  // use callback\n  const fetchMyTracks = React.useCallback( async () => {\n    // loading\n    setDataState(\"loading\");\n\n    try {\n      const response = await fetch(\n        `https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=mubrik&api_key=ae2c676a4406b4a3afdbe1f31413b72c&format=json&limit=4`\n      );\n      const result = await response.json();\n  \n      const reqObj: ITrackObj[] = [...result[\"recenttracks\"][\"track\"]];\n      const _nowPlaying = prepareData(reqObj.slice(0, 1)[0], \"nowPlaying\");\n      const _recentPlays = reqObj.slice(1).map((track) => prepareData(track, \"recent\"));\n\n      // set states\n      setNowPlaying(_nowPlaying);\n      setRecentPlays(_recentPlays);\n    } catch (error) {\n      // install notisstack for notifications later/ crreat custom comp\n      console.log(error);\n      setNowPlaying(null);\n      setRecentPlays(null);\n    }\n    setDataState(\"loaded\");\n\n  }, [dataState]);\n \n  // effect for loading data\n  React.useEffect(() => {\n    if (pageState === \"nowPlaying\" && dataState === \"idle\") {\n      fetchMyTracks();\n    }\n  }, [pageState, dataState]);\n\n  // anim transitions props\n  const transitions = useTransition(show, {\n    from: {\n      display: \"none\",\n      transform: \"scale(0.2)\",\n    },\n    enter: {\n      delay: 500,\n      display: \"flex\",\n      transform: \"scale(1)\",\n    },\n    leave: {\n      transform: \"scale(0)\",\n    },\n    expires: 2\n  });\n\n  // handlers\n  const handleRefreshClick = ():void => {\n    // refresh \n    setDataState(\"idle\");\n  };\n \n  return transitions(\n    (styles, show) => show &&\n    <animated.div style={styles}>\n    <StyledProfileCardDiv>\n      <Stack sx={{ gap: 1, maxHeight: \"97%\", position:\"relative\" }}>\n        <Stack direction={\"row\"} justifyContent={\"flex-end\"}>\n          <LoadingButton\n            onClick={handleRefreshClick}\n            loading={dataState === \"loading\" }\n            variant=\"outlined\"\n            color={darkMode ? \"secondary\" : \"primary\"}\n          >\n            Refresh\n          </LoadingButton>\n        </Stack>\n        <StyledResponsiveGrid>\n          <Stack>\n            { nowPlaying !== null &&\n            <Card\n              raised\n              sx={{\n                display: 'flex',\n                justifyContent: \"center\", \n                maxHeight: \"84%\",\n                borderRadius: \"14px\"\n              }} \n            >\n              <Box sx={{\n                display: 'flex', \n                flexDirection: 'column', \n                textAlign: \"center\", \n                gap: 1,\n                paddingTop: \"5px\"\n              }}\n              >\n                <Typography \n                  component=\"div\"\n                  variant=\"h4\"\n                  color={darkMode ? \"text.primary\" : \"text.secondary\"}\n                >\n                  Now Playing\n                </Typography>\n                <CardMedia\n                  component=\"img\"\n                  image={\n                    nowPlaying.image === \"\" ?\n                    // load a placeholder\n                    darkMode ? \"https://media.giphy.com/media/jx8f8LrkhIOyAy6gcM/giphy.gif\" :\n                    \"https://media.giphy.com/media/l46Ci4XuSbWL249fq/giphy.gif\" :\n                    nowPlaying.image\n                  }\n                  sx={{maxHeight: \"60%\"}}\n                  alt=\"Live from space album cover\"\n                />\n                <CardContent sx={{ flex: '1 1 auto' }}>\n                  <Typography \n                    component=\"div\"\n                    variant=\"h5\"\n                    color={darkMode ? \"text.primary\" : \"text.secondary\"}\n                  >\n                    {nowPlaying.title}\n                  </Typography>\n                  <Typography \n                    variant=\"subtitle1\"\n                    color={darkMode ? \"text.primary\" : \"text.secondary\"}\n                    component=\"div\"\n                  >\n                    {nowPlaying.artist}\n                  </Typography>\n                  <Typography \n                    variant=\"subtitle1\"\n                    color={darkMode ? \"text.primary\" : \"text.secondary\"}\n                    component=\"div\"\n                  >\n                    {nowPlaying.date}\n                  </Typography>\n                </CardContent>\n              </Box>\n            </Card>\n            }\n          </Stack>\n          <Stack direction={\"column\"} spacing={{ xs: 1, sm: 2, md: 1 }} >\n            {\n              recentPlays &&\n              recentPlays.map((track, index) => (\n                <Card \n                  raised\n                  key={index}\n                  sx={{\n                    display: 'flex',\n                    maxHeight: \"21vh\",\n                    borderRadius: \"14px\", \n                    maxWidth: {\n                      xs: \"auto\",\n                      sm: \"340px\",\n                      md: \"420px\"\n                    },\n                  }} \n                >\n                  <CardContent sx={{ flex: '1 1 auto' }}>\n                    <Typography \n                      component=\"div\"\n                      variant=\"h5\"\n                      color={darkMode ? \"textPrimary\" : \"textSecondary\"}\n                      sx={{overflow: \"hidden\"}}\n                    >\n                      {track.title} \n                    </Typography>\n                    <Typography \n                      variant=\"subtitle1\"\n                      color={darkMode ? \"textPrimary\" : \"textSecondary\"}\n                      component=\"div\"\n                    >\n                      {track.artist}\n                    </Typography>\n                    <Typography \n                      variant=\"subtitle1\"\n                      color={darkMode ? \"textPrimary\" : \"textSecondary\"}\n                      component=\"div\"\n                    >\n                      {track.date}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              ))\n            }\n          </Stack>\n        </StyledResponsiveGrid>\n        <Stack direction={\"row\"} justifyContent={\"flex-end\"}>\n          <CustomType \n            variant=\"subtitle1\"\n          >\n            Powered by LastFm\n          </CustomType>\n        </Stack>\n      </Stack>\n    </StyledProfileCardDiv>\n    </animated.div>\n  );\n};\n\nexport default NowPlaying;","import * as React from 'react';\r\n// styles\r\nimport { styled } from '@mui/system';\r\n// components\r\nimport NavButton from \"./NavButton\";\r\nimport DarkModeSwitch from './DarkModeSwitch';\r\nimport ProjectListView from './ProjectListView';\r\nimport ProfileView from './ProfileView';\r\nimport NowPlaying from './NowPlaying';\r\n\r\n// material styled\r\nconst StyledRootDiv = styled(\"div\")(({theme}) => ({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  position: \"relative\",\r\n  minHeight: \"92vh\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"start\",\r\n  padding: theme.spacing(0.8),\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    justifyContent: \"center\",\r\n  }\r\n}));\r\n\r\nconst StyledNavAreaDiv = styled(\"nav\")(({theme}) => ({\r\n  display: \"flex\",\r\n  width: \"100%\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  padding: theme.spacing(1)\r\n}));\r\n\r\nconst StyledBackgroundDiv = styled(\"div\")(({theme}) => ({\r\n  background: `linear-gradient(\r\n    180deg,\r\n    ${theme.palette.background.default} 65%,\r\n    ${theme.palette.type === \"dark\" ? theme.palette.primary.main : theme.palette.secondary.main}6e 300%)`,\r\n}));\r\n\r\n// page state enum\r\nexport type IHomePageState = \"home\" | \"projects\" | \"nowPlaying\";\r\n\r\nconst Homepage = (): JSX.Element => {\r\n\r\n  // page state\r\n  const [pageState, setPageState] = React.useState<IHomePageState>(\"home\");\r\n\r\n  return(\r\n    <StyledBackgroundDiv>\r\n    <StyledNavAreaDiv>\r\n      <NavButton setNav={setPageState}/>\r\n      <DarkModeSwitch/>\r\n    </StyledNavAreaDiv>\r\n    <StyledRootDiv>\r\n      {\r\n        pageState === \"home\" &&\r\n        <ProfileView \r\n          setNav={setPageState}\r\n          show={!!(pageState === \"home\")}\r\n        />\r\n      }\r\n      {\r\n        pageState === \"projects\" &&\r\n        <ProjectListView \r\n          setNav={setPageState}\r\n          show={!!(pageState === \"projects\")}\r\n        />\r\n      }\r\n      {\r\n        pageState === \"nowPlaying\" &&\r\n        <NowPlaying \r\n          setNav={setPageState}\r\n          pageState={pageState}\r\n          show={!!(pageState === \"nowPlaying\")}\r\n        />\r\n      }\r\n    </StyledRootDiv>\r\n    </StyledBackgroundDiv>\r\n  );\r\n};\r\n\r\nexport default Homepage;","import * as React from \"react\";\n\n\n/**\n * A helper to create a Context and Provider with no upfront default value, and\n * without having to check for undefined all the time.\n */\nfunction createContext<A extends unknown | null>(): readonly [() => A, React.Provider<A|undefined>] {\n  // create a context of type given or undefined\n  const ctx = React.createContext<A | undefined>(undefined);\n  // basicaly a use hook with error checking so TS works\n  function useCtx(): A {\n    const c = React.useContext(ctx);\n    if (c === undefined)\n      throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const; // 'as const' makes TypeScript infer a tuple\n}\n\nexport default createContext;","import * as React from 'react';\nimport Homepage from \"./components/HomePage\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n// import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { createTheme, ThemeProvider, responsiveFontSizes } from '@mui/material/styles';\n// utils\nimport createContext from \"./components/utils/contextUtil\";\n\n// darkmode context\n// interface for darkmode context\ninterface IDarkModeContext {\n  darkMode: boolean;\n  setDarkMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n// the context, created using custom create contex\n// custom includes error checking so TS doesnt flag an issue\nexport const [useDarkMode, DarkModeProvider] = createContext<IDarkModeContext>();\n\n// module augmentation\n// first time using this in TS, cool stuff\ndeclare module '@mui/material/styles' {\n  // allow configuration using `createTheme`\n  interface PaletteOptions {\n    type?: string;\n    warning?: PaletteColorOptions\n  }\n  interface PaletteColorOptions {\n    light?: string;\n    main: string;\n    dark?: string;\n  }\n}\n\nconst App = ():JSX.Element => {\n  // get darkmode preference\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  // state\n  const [darkMode, setDarkMode] = React.useState(false);\n  // memo\n  const darkModeValue = React.useMemo(() => {\n    return {\n      darkMode,\n      setDarkMode\n    };\n  }, [darkMode]);\n  // theme memoised\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: darkMode ? \"dark\" : \"light\",\n          mode: darkMode ? \"dark\" : \"light\",\n          primary: {\n            light: \"#6ec6ff\",\n            main: \"#2196f3\",\n            dark: \"#0069c0\",\n          },\n          secondary: {\n            light: \"#ff8038\",\n            main: \"#c95100\",\n            dark: \"#912000\",\n          },\n          warning: {\n            main: \"#b40000\"\n          }\n        },\n        typography: {\n          fontFamily: [\n              \"Ubuntu\",\n              \"sans-serif\",\n          ].join(\",\"),\n          fontSize: 14,\n        },\n        breakpoints: {\n          values: {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1536,\n          },\n        },\n      }),\n    [darkMode],\n  );\n\n  // responsive theme\n  const responsiveTheme = responsiveFontSizes(theme, {factor:3});\n\n  // effect for setting dark mode\n  React.useEffect(() => {\n    setDarkMode(prefersDarkMode);\n  }, [prefersDarkMode]);\n  // basic effect for testing stuff\n  // React.useEffect(() => {\n  //   console.log(theme);\n  // });\n\n\n  return(\n    <>\n    <ThemeProvider theme={responsiveTheme}>\n      <DarkModeProvider value={darkModeValue}>\n        <Homepage/>\n      </DarkModeProvider>\n    </ThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}