{"version":3,"sources":["components/NavButton.tsx","components/DarkModeSwitch.tsx","components/CustomComponents.tsx","components/ProjectCard.tsx","components/ProjectListView.tsx","components/ProfileView.tsx","components/NowPlaying.tsx","components/HomePage.tsx","components/utils/contextUtil.ts","App.tsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","NavButton","position","border","palette","type","primary","main","secondary","left","top","breakpoints","up","setNav","classes","darkMode","useDarkMode","React","anchorEl","setAnchorEl","menuShow","Boolean","handleMenuItemClick","str","IconButton","className","onClick","e","currentTarget","color","open","onClose","id","TransitionComponent","Fade","MenuItem","root","iconPosition","margin","right","DarkModeSwitch","setDarkMode","state","fontSize","CustomType","children","rest","Typography","CustomButton","Button","variant","CustomLinkButton","href","event","preventDefault","window","handleLink","display","flexDirection","width","media","maxHeight","minWidth","maxWidth","cardBodyArea","cardDetailsArea","gridTemplateRows","padding","spacing","justifyItems","gridTemplateColumns","cardTextArea","textAlign","cardButtonArea","justifyContent","ProjectCard","imageUri","content","siteLink","codeLink","Paper","elevation","alt","src","Skeleton","height","animation","component","profileCard","light","boxShadow","borderRadius","profileDiv","backButton","alignSelf","marginBottom","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","text","avatar","marginRight","ProjectListView","show","useState","expanded","setExpanded","projData","setProjData","transitions","useTransition","from","transform","enter","delay","leave","expires","useEffect","fetch","then","res","json","result","details","handleClick","styles","div","style","size","startIcon","map","item","index","Accordion","onChange","_","isExpanded","panel","handleChange","AccordionSummary","expandIcon","Avatar","header","slice","description","AccordionDetails","projectBtnSection","alignItems","profileAvatar","aboutSection","ProfileView","useTheme","param","marginTop","bgColor","dark","url","title","network","NowPlaying","pageState","nowPlaying","setNowPlaying","recentPlays","setRecentPlays","dataState","setDataState","fetchMyTracks","a","response","console","log","reqObj","_nowPlaying","prepareData","_recentPlays","track","handleRefreshClick","newData","_stateData","artist","image","date","timeMs","name","_playtime","uts","Date","Stack","sx","gap","direction","cursor","flexWrap","Card","Box","CardMedia","CardContent","flex","minHeight","background","default","Homepage","setPageState","createContext","ctx","undefined","c","Error","Provider","DarkModeProvider","App","prefersDarkMode","useMediaQuery","darkModeValue","createMuiTheme","warning","fontFamily","join","values","xs","sm","md","lg","xl","responsiveTheme","responsiveFontSizes","factor","ThemeProvider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.faee7d37.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\n// drkmode\r\nimport { useDarkMode } from '../App';\r\n// types\r\nimport {IHomePageState} from \"./HomePage\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  NavButton: {\r\n    position: \"absolute\",\r\n    border: `1px solid ${theme.palette.type == \"dark\" ? theme.palette.primary.main : theme.palette.secondary.main}`,\r\n    left: \"20px\",\r\n    top: \"15px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      left: \"50px\",\r\n      top: \"50px\"\r\n    },\r\n  },\r\n}));\r\n\r\ninterface INavProps {\r\n  setNav: React.Dispatch<React.SetStateAction<IHomePageState>>;\r\n}\r\n\r\nconst NavButton = ({setNav}:INavProps): JSX.Element => {\r\n  // material \r\n  const classes = useStyles();\r\n  // darkmode\r\n  const {darkMode} = useDarkMode();\r\n  // states\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement|null>(null);\r\n  const menuShow = Boolean(anchorEl);\r\n\r\n  // handle click, mount element\r\n  const handleMenuClick = (_event: React.MouseEvent<HTMLButtonElement>): void => {\r\n    setAnchorEl(_event.currentTarget);\r\n  };\r\n  // handle menu close\r\n  const handleMenuItemClick = (str: string): void => {\r\n    switch (str) {\r\n      case \"projects\":\r\n        setNav(\"projects\");\r\n        setAnchorEl(null);\r\n        break;\r\n      \r\n      case \"home\":\r\n        setNav(\"home\");\r\n        setAnchorEl(null);\r\n        break;\r\n      \r\n      case \"nowPlaying\":\r\n        setNav(\"nowPlaying\");\r\n        setAnchorEl(null);\r\n        break;\r\n  \r\n      default:\r\n        setAnchorEl(null);\r\n        break;\r\n    }\r\n  };\r\n\r\n  // const menuProps = {\r\n  //   anchorEl,\r\n  //   open,\r\n  //   onClose: handleClose,\r\n  //   id: \"faded-menu\",\r\n  //   TransitionComponent: Fade\r\n  // };\r\n\r\n  return (\r\n    <>\r\n    <IconButton \r\n      aria-controls=\"fade-menu\"\r\n      aria-haspopup=\"true\" \r\n      className={classes.NavButton}\r\n      onClick={(e) => handleMenuClick(e)}\r\n    >\r\n      <MenuIcon color={darkMode ? \"primary\" : \"secondary\"} />\r\n    </IconButton>\r\n    <Menu\r\n      open={menuShow}\r\n      anchorEl={anchorEl}\r\n      onClose={handleMenuItemClick}\r\n      id=\"faded-menu\"\r\n      TransitionComponent={Fade}\r\n    >\r\n      <MenuItem onClick={() => handleMenuItemClick(\"home\")}> Home </MenuItem>\r\n      <MenuItem onClick={() => handleMenuItemClick(\"projects\")}> Projects </MenuItem>\r\n      <MenuItem onClick={() => handleMenuItemClick(\"nowPlaying\")}> Now Playing </MenuItem>\r\n    </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n// const CustomFade = React.forwardRef((props, ref) => (<Fade {...props} ref={ref} />));\r\n// CustomFade.displayName = \"CustomFade\";\r\n\r\n// const CustomMenu = React.forwardRef((props, ref) => (<Menu {...props} ref={ref}/>));\r\n// CustomMenu.displayName = \"CustomMenu\";\r\n\r\n// const CustomMenuItem = React.forwardRef((props, ref) => (<MenuItem {...props} ref={ref}/>));\r\n// CustomMenuItem.displayName = \"CustomMenuItem\";\r\n\r\nexport default NavButton;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IconButton } from '@material-ui/core';\r\nimport EmojiObjectsOutlinedIcon from '@material-ui/icons/EmojiObjectsOutlined';\r\n// dk mode context\r\nimport {useDarkMode} from \"../App\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    color:theme.palette.type === \"dark\" ? theme.palette.primary.main : theme.palette.secondary.main,\r\n  },\r\n  iconPosition: {\r\n    margin: 0,\r\n    position: \"absolute\",\r\n    right: \"20px\",\r\n    top: \"12px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        right: \"50px\",\r\n        top: \"50px\"\r\n    },\r\n  }\r\n}));\r\n\r\nconst DarkModeSwitch = (): JSX.Element => {\r\n  // styles\r\n  const classes = useStyles();\r\n  // darkmode\r\n  const {setDarkMode} = useDarkMode();\r\n\r\n  return(\r\n    <div className={classes.iconPosition}>\r\n      <IconButton\r\n        className={classes.root}\r\n        onClick={() => setDarkMode(state => !state)}\r\n      >\r\n        <EmojiObjectsOutlinedIcon fontSize={\"large\"}/>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DarkModeSwitch;","import * as React from 'react';\r\n// ui\r\nimport {Typography, Button, TypographyProps, ButtonProps } from '@material-ui/core';\r\n// comps\r\nimport {useDarkMode} from \"../App\";\r\n\r\nconst CustomType = ({children, ...rest}: TypographyProps): JSX.Element=> {\r\n  // darkmode\r\n  const {darkMode} = useDarkMode();\r\n\r\n  return (\r\n    <Typography \r\n      color={darkMode ? \"textPrimary\" : \"textSecondary\"}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst CustomButton = ({children, ...rest}: ButtonProps):JSX.Element => {\r\n\r\n  // darkmode\r\n  const {darkMode} = useDarkMode();\r\n\r\n  return(\r\n    <Button \r\n      color={darkMode ? \"primary\" : \"secondary\"}\r\n      variant={'contained'}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n\r\n};\r\n\r\nconst CustomLinkButton = ({children, href,  ...rest}: ButtonProps):JSX.Element => {\r\n\r\n  // darkmode\r\n  const {darkMode} = useDarkMode();\r\n  // handle click, cant use \"target\" for TS?, need links to open in new tab\r\n  const handleLink = (href: string, event?:React.MouseEvent<HTMLButtonElement>): void => {\r\n    // prev default\r\n    event.preventDefault();\r\n    // manually open\r\n    window.open(href, \"_blank\");\r\n  };\r\n\r\n  return(\r\n    <Button \r\n      color={darkMode ? \"primary\" : \"secondary\"}\r\n      variant={'outlined'}\r\n      href={href}\r\n      onClick={(e) => handleLink(href, e)}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport {CustomType, CustomButton, CustomLinkButton};","import * as React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {CustomLinkButton} from './CustomComponents';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\"\r\n  },\r\n  media: {\r\n    maxHeight: 320,\r\n    minWidth: 120,\r\n    maxWidth: 200,\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      maxHeight: 320,\r\n      maxWidth: 400,\r\n      minWidth: 200,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      maxHeight: 320,\r\n      maxWidth: 400,\r\n      minWidth: 320,\r\n    },\r\n  },\r\n  cardBodyArea: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  cardDetailsArea: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"auto\",\r\n    padding: theme.spacing(0.4),\r\n    justifyItems: \"center\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      gridTemplateColumns: \"auto auto\",\r\n    },\r\n  }, \r\n  cardTextArea : {\r\n    padding: theme.spacing(0.4),\r\n    margin: theme.spacing(0.2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\"\r\n  },\r\n  cardButtonArea : {\r\n    padding: theme.spacing(0.4),\r\n    margin: theme.spacing(0.4),\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\"\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(0.4),\r\n  }\r\n}));\r\n\r\ninterface IJsonObj {\r\n  header: string;\r\n  content: string;\r\n  description: string;\r\n  codeLink: string;\r\n  imageUri: string;\r\n  siteLink?: string;\r\n}\r\n\r\nconst ProjectCard = ({imageUri, content, siteLink, codeLink}: IJsonObj): JSX.Element => {\r\n  // styles\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <Paper elevation={0} className={classes.root}>\r\n      <div className={classes.cardDetailsArea}>\r\n        {imageUri ? (\r\n            <img\r\n                className={classes.media}\r\n                alt={\"ff\"}\r\n                src={imageUri}\r\n            />\r\n            ) : (\r\n                <Skeleton className={classes.media} height={30} animation=\"wave\"/>\r\n            )\r\n        }\r\n          \r\n        <div className={classes.cardTextArea}>\r\n          <div>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {content ? content : \"\"}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.cardButtonArea}>\r\n            {siteLink && <CustomLinkButton href={siteLink}>Check It Out</CustomLinkButton>}\r\n            <CustomLinkButton href={codeLink} >Git Code</CustomLinkButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;","import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { animated, useTransition } from 'react-spring';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { CustomButton, CustomType} from './CustomComponents';\r\n//types\r\nimport {IHomePageState} from \"./HomePage\";\r\n\r\nconst useStyles = makeStyles(theme => ({ \r\n  profileCard: {\r\n    display: \"none\",\r\n    position: \"relative\",\r\n    flexDirection: \"column\",\r\n    height: \"auto\",\r\n    minWidth:\"100%\", // mobile\r\n    padding: theme.spacing(2),\r\n    border: theme.palette.type === \"dark\" ? `1px solid ${theme.palette.primary.light}21` : \"none\",\r\n    boxShadow: theme.palette.type === \"dark\"  ? \"none\" : `7px 10px 14px 1px #0000000d,\r\n    1px 3px 10px 1px #00000021`,\r\n    borderRadius: \"0.9em\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      minWidth:\"55%\"\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      minWidth:\"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n      minWidth:\"75%\"\r\n    },\r\n  },\r\n  profileDiv: {\r\n    margin: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  backButton: {\r\n    alignSelf: \"self-start\",\r\n    margin: theme.spacing(1),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  spacing: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  avatar: {\r\n    height: \"auto\",\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\ninterface IProjectListView {\r\n  setNav: React.Dispatch<React.SetStateAction<IHomePageState>>;\r\n  show: boolean;\r\n}\r\n\r\ninterface IJsonObj {\r\n  header: string;\r\n  content: string;\r\n  description: string;\r\n  codeLink: string;\r\n  imageUri: string;\r\n  siteLink?: string;\r\n}\r\n\r\nconst ProjectListView = ({setNav, show}: IProjectListView): JSX.Element => {\r\n\r\n    // material styles\r\n    const classes = useStyles();\r\n    // states\r\n    // handle accordions\r\n    const [expanded, setExpanded] = React.useState<boolean|string>(false);\r\n    // project data\r\n    const [projData, setProjData] = React.useState<IJsonObj[]>(null);\r\n    // anim transitions props\r\n    const transitions = useTransition(show, {\r\n      from: {\r\n        display: \"none\",\r\n        transform: \"translateX(80%)\",\r\n      },\r\n      enter: {\r\n        delay: 600,\r\n        display: \"flex\",\r\n        transform: \"translateX(0%)\",\r\n      },\r\n      leave: {\r\n        transform: \"translateX(-250%)\",\r\n      },\r\n      expires: 2\r\n    });\r\n    // fetch project details\r\n    React.useEffect(() => {\r\n      fetch('/react-homepage/projectDetails.json')\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          const {details} = result;\r\n          setProjData(details as IJsonObj[]);\r\n        });\r\n    }, []);\r\n    // handle button clicks\r\n    const handleClick = (): void => {\r\n      setNav(\"home\");\r\n    };\r\n\r\n    const handleChange = (panel: string, isExpanded: boolean): void => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    return transitions(\r\n      (styles, show) => show && \r\n        <animated.div className={classes.profileCard} style={styles}>\r\n          <div className={classes.profileDiv}>\r\n            <CustomButton\r\n              size={\"small\"}\r\n              onClick={handleClick}\r\n              className={classes.backButton}\r\n              startIcon={<ArrowBackIcon/>}\r\n            >\r\n              Home\r\n            </CustomButton>\r\n            { projData ? \r\n                projData.map((item, index) => (\r\n                  <Accordion\r\n                    key={`panel${index}`}\r\n                    className={classes.spacing}\r\n                    expanded={expanded === `panel${index}`} \r\n                    onChange={(_, isExpanded) => handleChange(`panel${index}`, isExpanded)}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1a-content\"\r\n                      id=\"panel1a-header\"\r\n                    >\r\n                      <Avatar aria-label=\"title\" className={classes.avatar} variant=\"rounded\">\r\n                        {item.header.slice(0, 1)}\r\n                      </Avatar>\r\n                      <CustomType className={classes.heading}>{item.header}</CustomType>\r\n                      <CustomType className={classes.secondaryHeading}>{item.description}</CustomType>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <ProjectCard {...item}/>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  // <ProjectAccordion\r\n                  //   key={`panel${index}`}\r\n                  //   title={item.header}\r\n                  //   description={item.description}\r\n                  //   className={classes.spacing}\r\n                  //   expanded={expanded === `panel${index}`} \r\n                  //   onChange={(_: React.ChangeEvent, isExpanded: boolean) => handleChange(`panel${index}`, isExpanded)}\r\n                  // >\r\n                  //   <ProjectCard {...item}/>\r\n                  // </ProjectAccordion>\r\n                )) :\r\n                null\r\n            }\r\n          </div>\r\n        </animated.div>\r\n    );\r\n};\r\n\r\n// const ProjectAccordion = ({children, title, description, ...rest}): JSX.Element => {\r\n\r\n//   // material styles\r\n//   const classes = useStyles();\r\n\r\n//   return(\r\n//     <Accordion {...rest}>\r\n//       <AccordionSummary\r\n//         expandIcon={<ExpandMoreIcon />}\r\n//         aria-controls=\"panel1a-content\"\r\n//         id=\"panel1a-header\"\r\n//       >\r\n//         <Avatar aria-label=\"title\" className={classes.avatar} variant=\"rounded\">\r\n//           {title.slice(0, 1)}\r\n//         </Avatar>\r\n//         <CustomType className={classes.heading}>{title}</CustomType>\r\n//         <CustomType className={classes.secondaryHeading}>{description}</CustomType>\r\n//       </AccordionSummary>\r\n//       <AccordionDetails>\r\n//         {children}\r\n//       </AccordionDetails>\r\n//   </Accordion>\r\n//   );\r\n// };\r\n\r\nexport default ProjectListView;","import * as React from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { animated, useTransition } from 'react-spring';\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport {CustomType, CustomButton} from './CustomComponents';\r\n// dkmode\r\nimport { useDarkMode } from '../App';\r\n//types\r\nimport {IHomePageState} from \"./HomePage\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  profileCard: {\r\n    display: \"none\",\r\n    position: \"relative\",\r\n    flexDirection: \"column\",\r\n    height: \"auto\",\r\n    padding: theme.spacing(2),\r\n    border: theme.palette.type === \"dark\" ? `1px solid ${theme.palette.primary.light}21` : \"none\",\r\n    boxShadow: theme.palette.type === \"dark\"? \"none\" : `7px 10px 14px 1px #0000000d,\r\n    1px 3px 10px 1px #00000021`,\r\n    borderRadius: \"0.9em\",\r\n    minWidth:\"100%\", // mobile\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n        minWidth:\"40%\"\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        minWidth:\"50%\"\r\n    },\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n        minWidth:\"60%\"\r\n    },\r\n  },\r\n  profileDiv: {\r\n    margin: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(5),\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  projectBtnSection: {\r\n    margin: theme.spacing(0.5),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  profileAvatar: {\r\n    height: \"150px\",\r\n    width: \"150px\"\r\n  },\r\n  aboutSection: {\r\n    margin: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(0.5),\r\n  }\r\n}));\r\n\r\ninterface IProfileViewProps {\r\n  setNav: React.Dispatch<React.SetStateAction<IHomePageState>>;\r\n  show: boolean;\r\n}\r\n\r\nconst ProfileView = ({setNav, show}: IProfileViewProps): JSX.Element => {\r\n  // material styles\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // anim transitions props\r\n  const transitions = useTransition(show, {\r\n      from: {\r\n          display: \"none\",\r\n          transform: \"scale(0.2)\",\r\n      },\r\n      enter: {\r\n          delay: 500,\r\n          display: \"flex\",\r\n          transform: \"scale(1)\",\r\n      },\r\n      leave: {\r\n          transform: \"scale(0)\",\r\n      },\r\n      expires: 2\r\n  });\r\n  // darkmode\r\n  const {darkMode} = useDarkMode();\r\n  // handle button clicks\r\n  const handleClick = (param: IHomePageState): void => {\r\n    setNav(param);\r\n  };\r\n\r\n  return transitions(\r\n    (styles, show) => show &&\r\n    <animated.div className={classes.profileCard} style={styles}>\r\n      <div className={classes.profileDiv}>\r\n        <Avatar \r\n        src={darkMode ? \"/react-homepage/avi2.png\" : \"/react-homepage/avi.png\"} \r\n        alt=\"test\"\r\n        className={classes.profileAvatar}\r\n        />\r\n      </div>\r\n      <div className={classes.aboutSection}>\r\n        <CustomType>My name is Mubarak Yahaya, A programmer based in Nigeria.</CustomType>\r\n        <CustomType>I love good music, coffee and tweaking :)</CustomType>\r\n        <CustomType>My current development stack includes Python, javaScript(typeScript) and Linux</CustomType>\r\n      </div>\r\n      <div className={classes.projectBtnSection}>\r\n        <CustomType className={classes.margin}>Check out some of my</CustomType>\r\n        <CustomButton\r\n          className={classes.margin}\r\n          onClick={() => handleClick(\"projects\")}\r\n        >\r\n          Projects\r\n        </CustomButton>\r\n      </div>\r\n      <div className={classes.projectBtnSection}>\r\n        <CustomType className={classes.margin}>What am i </CustomType>\r\n        <CustomButton\r\n          className={classes.margin}\r\n          onClick={() => handleClick(\"nowPlaying\")}\r\n        >\r\n          Listening\r\n        </CustomButton>\r\n        <CustomType className={classes.margin}>to?</CustomType>\r\n      </div>\r\n      <div className={classes.profileDiv} style={{marginTop: \"15px\"}}>\r\n        <SocialIcon \r\n          bgColor={darkMode ? theme.palette.primary.dark : \"black\"} \r\n          url={\"https://github.com/mubrik\"}\r\n          title={\"Github\"}\r\n        />\r\n        <SocialIcon \r\n          bgColor={darkMode ? theme.palette.primary.dark : \"black\"} \r\n          url={\"mailto:mubarakg4u@gmail.com\"}\r\n          network={\"email\"}\r\n          title={\"Email\"}\r\n        />\r\n        <SocialIcon \r\n          url={\"https://t.me/mubrik1\"}\r\n          network={\"telegram\"}\r\n          title={\"Telegram\"}\r\n        />\r\n        <SocialIcon\r\n          url={\"https://www.linkedin.com/in/mubarak-yahaya-957917163\"}\r\n          title={\"LinkedIn\"}\r\n        />\r\n      </div>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default ProfileView;","import * as React from \"react\";\n// material\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\n// transitions\nimport { animated, useTransition } from 'react-spring';\n// types\nimport {IHomePageState} from \"./HomePage\";\n// icon\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { Stack } from \"@mui/material\";\n// drkmode\nimport { useDarkMode } from \"../App\";\n\nconst useStyles = makeStyles(theme => ({\n  profileCard: {\n    display: \"none\",\n    position: \"relative\",\n    flexDirection: \"column\",\n    height: \"auto\",\n    padding: theme.spacing(2),\n    border: theme.palette.type === \"dark\" ? `1px solid ${theme.palette.primary.light}21` : \"none\",\n    boxShadow: theme.palette.type === \"dark\"? \"none\" : `7px 10px 14px 1px #0000000d,\n    1px 3px 10px 1px #00000021`,\n    borderRadius: \"0.9em\",\n    minWidth:\"100%\", // mobile\n    [theme.breakpoints.up(\"xs\")]: {\n        minWidth:\"40%\"\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n        minWidth:\"50%\"\n    },\n    [theme.breakpoints.up(\"xl\")]: {\n        minWidth:\"60%\"\n    },\n  },\n}));\n\ntype IDataState = \"idle\"| \"loaded\" | \"loading\"\n\ninterface INowPlayingProps {\n  pageState: IHomePageState;\n  setNav: React.Dispatch<React.SetStateAction<IHomePageState>>;\n  show: boolean;\n}\n\ninterface ITrackObj {\n  artist: {mbid: string; \"#text\": string;};\n  date: {uts: string; \"#text\": string;}\n  image: ITrackImageObj[]\n  name: string;\n  url: string;\n}\n\ninterface ITrackImageObj {\n  size: string;\n  \"#text\": string;\n}\n\ninterface ISongDetail {\n  artist: string;\n  title: string;\n  image: string;\n  date: string;\n  timeMs: string;\n}\n\nconst NowPlaying = ({pageState, show}: INowPlayingProps): JSX.Element => {\n\n  // states\n  const [nowPlaying, setNowPlaying] = React.useState<ISongDetail>(null);\n  const [recentPlays, setRecentPlays] = React.useState<ISongDetail[]>(null);\n  const [dataState, setDataState] = React.useState<IDataState>(\"idle\");\n\n  // darkmode \n  const {darkMode} = useDarkMode();\n  const theme = useTheme();\n\n  // use callback\n  const fetchMyTracks = React.useCallback( async () => {\n    // loading\n    setDataState(\"loading\");\n\n    try {\n      const response = await fetch(\n        `https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=mubrik&api_key=ae2c676a4406b4a3afdbe1f31413b72c&format=json&limit=5`\n      );\n      const result = await response.json();\n      console.log(result);\n  \n      const reqObj: ITrackObj[] = [...result[\"recenttracks\"][\"track\"]];\n      const _nowPlaying = prepareData(reqObj.slice(0, 1)[0], \"nowPlaying\");\n      const _recentPlays = reqObj.slice(1).map((track) => prepareData(track, \"recent\"));\n\n      // set states\n      setNowPlaying(_nowPlaying);\n      setRecentPlays(_recentPlays);\n    } catch (error) {\n      console.log(error);\n      setNowPlaying(null);\n      setRecentPlays(null);\n    }\n    setDataState(\"loaded\");\n\n  }, [dataState]);\n \n  // effect for loading data\n  React.useEffect(() => {\n    if (pageState === \"nowPlaying\" && dataState === \"idle\") {\n      fetchMyTracks();\n    }\n  }, [pageState, dataState]);\n\n  // material\n  const classes = useStyles();\n\n  // anim transitions props\n  const transitions = useTransition(show, {\n    from: {\n        display: \"none\",\n        transform: \"scale(0.2)\",\n    },\n    enter: {\n        delay: 500,\n        display: \"flex\",\n        transform: \"scale(1)\",\n    },\n    leave: {\n        transform: \"scale(0)\",\n    },\n    expires: 2\n  });\n\n  // handlers\n  const handleRefreshClick = ():void => {\n    // refresh \n    setDataState(\"idle\");\n  };\n\n  // making this as for some reason react spring kept bugging while using \"#text\" from lastfm\n  const prepareData = (param: ITrackObj, type?: string):ISongDetail => {\n\n    // copy\n    const newData = {...param};\n    // initial data\n    const _stateData: ISongDetail = {\n      artist: \"\",\n      title: \"\",\n      image: \"\",\n      date: \"\",\n      timeMs: \"\"\n    };\n\n    // mutate.. apparently bug might be from last fm? \n    // ah, i'm dumb, i use last fm apis and forgot date isnt available until the track is scrobbled. smfh, facepalm\n    // for now playing track, the details are available but date isnt, which could cause the object key being absent\n    _stateData.artist = newData?.artist?.[\"#text\"] ? newData.artist[\"#text\"] : \"placeholder\";\n    _stateData.date = newData?.date?.[\"#text\"] ? newData.date[\"#text\"] : \"\";\n    _stateData.timeMs = newData?.date?.[\"uts\"] ? newData.date[\"uts\"] : \"placeholder\";\n    _stateData.title = newData?.name ? newData.name  : \"placeholder\";\n    // array index 2 has large sinze image link\n    _stateData.image = newData?.image[2][\"#text\"] ? newData.image[2][\"#text\"] : \"\";\n    if (type === \"nowPlaying\") {\n      // could be recent track, get time if available\n      const _playtime = newData?.date?.uts ? newData.date.uts : null;\n\n      if (_playtime) {\n        console.log(_playtime);\n        const currTime = new Date();\n      }\n\n    }\n    // return data\n    return _stateData;\n  };\n \n  return transitions(\n    (styles, show) => show &&\n    <animated.div style={styles} className={classes.profileCard}>\n      <Stack sx={{ gap: 1 }}>\n        <Stack direction={\"row\"} justifyContent={\"flex-end\"}>\n          <RefreshIcon\n            aria-label={\"refresh\"}\n            color={darkMode ? \"secondary\" : \"primary\"}\n            onClick={handleRefreshClick} \n            sx={{cursor: dataState === \"loading\" ?  \"progress\" : \"pointer\"}} \n          />\n        </Stack>\n        <Stack direction={\"row\"} \n          sx={{ display: \"grid\",\n            gridTemplateColumns: \"1fr 0.6fr\",\n            gap: 1, \n            flexWrap: \"wrap\" \n          }}\n        >\n          <Stack>\n            { nowPlaying !== null &&\n            <Card sx={{ display: 'flex', justifyContent: \"center\", height: \"100%\" }}>\n              <Box sx={{ display: 'flex', flexDirection: 'column', textAlign: \"center\" }}>\n                  <Typography \n                    component=\"div\"\n                    variant=\"h4\"\n                    color={darkMode ? \"text.primary\" : \"text.secondary\"}\n                  >\n                    Now Playing\n                  </Typography>\n                <CardMedia\n                  component=\"img\"\n                  image={\n                    nowPlaying.image === \"\" ?\n                    // load a placeholder\n                    \"https://media.giphy.com/media/l46Ci4XuSbWL249fq/giphy.gif\" :\n                    nowPlaying.image\n                  }\n                  alt=\"Live from space album cover\"\n                />\n                <CardContent sx={{ flex: '1 0 auto' }}>\n                  <Typography \n                    component=\"div\"\n                    variant=\"h5\"\n                    color={darkMode ? \"text.primary\" : \"text.secondary\"}\n                  >\n                    {nowPlaying.title}\n                  </Typography>\n                  <Typography \n                    variant=\"subtitle1\"\n                    color={darkMode ? \"text.primary\" : \"text.secondary\"}\n                    component=\"div\"\n                  >\n                    {nowPlaying.artist}\n                  </Typography>\n                  <Typography \n                    variant=\"subtitle1\"\n                    color={darkMode ? \"text.primary\" : \"text.secondary\"}\n                    component=\"div\"\n                  >\n                    {nowPlaying.date}\n                  </Typography>\n                </CardContent>\n              </Box>\n            </Card>\n            }\n          </Stack>\n          <Stack sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            {\n              recentPlays &&\n              recentPlays.map((track, index) => (\n                <Card sx={{ display: 'flex' }} key={index}>\n                  <CardContent sx={{ flex: '1 0 auto' }}>\n                    <Typography \n                      component=\"div\"\n                      variant=\"h5\"\n                      color={darkMode ? \"textPrimary\" : \"textSecondary\"}\n                    >\n                      {track.title} \n                    </Typography>\n                    <Typography \n                      variant=\"subtitle1\"\n                      color={darkMode ? \"textPrimary\" : \"textSecondary\"}\n                      component=\"div\"\n                    >\n                      {track.artist}\n                    </Typography>\n                    <Typography \n                      variant=\"subtitle1\"\n                      color={darkMode ? \"textPrimary\" : \"textSecondary\"}\n                      component=\"div\"\n                    >\n                      {track.date}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              ))\n            }\n          </Stack>\n        </Stack>\n        <Stack direction={\"row\"} justifyContent={\"flex-end\"}>\n          <Typography \n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            Powered by LastFm\n          </Typography>\n        </Stack>\n      </Stack>\n    </animated.div>\n  );\n};\n\nexport default NowPlaying;","import * as React from 'react';\r\n// styles\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// components\r\nimport NavButton from \"./NavButton\";\r\nimport DarkModeSwitch from './DarkModeSwitch';\r\nimport ProjectListView from './ProjectListView';\r\nimport ProfileView from './ProfileView';\r\nimport NowPlaying from './NowPlaying';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: \"relative\",\r\n    minHeight: \"100vh\",\r\n    background: `linear-gradient(\r\n      180deg,\r\n      ${theme.palette.background.default} 65%,\r\n      ${theme.palette.type === \"dark\" ? theme.palette.primary.main : theme.palette.secondary.main}6e 300%)`,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(0.8)\r\n  },\r\n}));\r\n\r\nexport type IHomePageState = \"home\" | \"projects\" | \"nowPlaying\";\r\n\r\nconst Homepage = (): JSX.Element => {\r\n\r\n  // material styles\r\n  const classes = useStyles();\r\n  // page state\r\n  const [pageState, setPageState] = React.useState<IHomePageState>(\"home\");\r\n\r\n  return(\r\n    <>\r\n    <div className={classes.root}>\r\n      <NavButton setNav={setPageState}/>\r\n      <DarkModeSwitch/>\r\n      {\r\n        pageState === \"home\" &&\r\n        <ProfileView \r\n          setNav={setPageState}\r\n          show={!!(pageState === \"home\")}\r\n        />\r\n      }\r\n      {\r\n        pageState === \"projects\" &&\r\n        <ProjectListView \r\n          setNav={setPageState}\r\n          show={!!(pageState === \"projects\")}\r\n        />\r\n      }\r\n      {\r\n        pageState === \"nowPlaying\" &&\r\n        <NowPlaying \r\n          setNav={setPageState}\r\n          pageState={pageState}\r\n          show={!!(pageState === \"nowPlaying\")}\r\n        />\r\n      }\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;","import * as React from \"react\";\n\n\n/**\n * A helper to create a Context and Provider with no upfront default value, and\n * without having to check for undefined all the time.\n */\nfunction createContext<A extends unknown | null>(): readonly [() => A, React.Provider<A>] {\n  // create a context of type given or undefined\n  const ctx = React.createContext<A | undefined>(undefined);\n  // basicaly a use hook with error checking so TS works\n  function useCtx(): A {\n    const c = React.useContext(ctx);\n    if (c === undefined)\n      throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const; // 'as const' makes TypeScript infer a tuple\n}\n\nexport default createContext;","import * as React from 'react';\nimport Homepage from \"./components/HomePage\";\nimport { ThemeProvider  } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n// utils\nimport createContext from \"./components/utils/contextUtil\";\n\n// darkmode context\n// interface\ninterface IDarkModeContext {\n  darkMode: boolean;\n  setDarkMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\nexport const DarkModeContext = React.createContext<IDarkModeContext | null>(null);\nexport const [useDarkMode, DarkModeProvider] = createContext<IDarkModeContext>();\n\nconst App = ():JSX.Element => {\n  // get darkmode preference\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  // state\n  const [darkMode, setDarkMode] = React.useState(false);\n  // memo\n  const darkModeValue = React.useMemo(() => {\n    return {\n      darkMode,\n      setDarkMode\n    };\n  }, [darkMode]);\n  // theme memoised\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: darkMode ? \"dark\" : \"light\",\n          primary: {\n            light: \"#6ec6ff\",\n            main: \"#2196f3\",\n            dark: \"#0069c0\",\n          },\n          secondary: {\n            light: \"#ff8038\",\n            main: \"#c95100\",\n            dark: \"#912000\",\n          },\n          warning: {\n            main: \"#b40000\"\n          }\n        },\n        typography: {\n          fontFamily: [\n              \"Ubuntu\",\n              \"sans-serif\",\n          ].join(\",\"),\n          fontSize: 14,\n        },\n        breakpoints: {\n          values: {\n            xs: 500,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920,\n          },\n        },\n      }),\n    [darkMode],\n  );\n  // responsive theme\n  const responsiveTheme = responsiveFontSizes(theme, {factor:3});\n  // effect for setting dark mode\n  React.useEffect(() => {\n    setDarkMode(prefersDarkMode);\n  }, [prefersDarkMode]);\n\n\n  return(\n    <>\n    <ThemeProvider theme={responsiveTheme}>\n      <DarkModeProvider value={darkModeValue}>\n        <Homepage/>\n      </DarkModeProvider>\n    </ThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}